import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
      int[] num={5,3,4};
      System.out.println(bestSum(7,num));
    }
   static List<Integer> bestSum(int targetSum, int[] numbers) {
 
    // **** sanity check(s) ****
    if (targetSum == 0) return null;
 
    // **** initialization ****
    List<List<Integer>> table = new ArrayList<List<Integer>>();
    List<Integer> lst = new ArrayList<>();
 
    table.add(lst);
    for (int i = 1; i <= targetSum; i++)
        table.add(null);
    for (int i = 0; i <= targetSum; i++) {
 
        // **** skip this entry (if needed) ****
        if (table.get(i) == null)
            continue;
 
        // **** loop through the numbers[] array **** 
        for (int j = 0; j < numbers.length; j++) {
 
            // **** for ease of use ****
            int num = numbers[j];
 
            // **** compute target index (for ease of use) ****
            int ndx = i + num;
 
            // **** skip (if ndx is out of bounds) ****
            if (ndx > targetSum)
                continue;
 
            // **** initialize this list (if needed) ****
            lst = table.get(ndx);
            if (lst == null)
                lst = new ArrayList<>();
 
            // **** copy all elements from table[i] to table[ndx] ****
            List<Integer> src = table.get(i);
            List<Integer> dst = table.get(ndx);
 
            // **** ****
            dst = new ArrayList<Integer>();
            dst.addAll(src);
 
            // **** add current element to dst list ****
            dst.add(num);
 
            // **** replace list at ndx (if shorter) ****
            if (table.get(ndx) == null || dst.size() < table.get(ndx).size()) {
                table.remove(ndx);
                table.add(ndx, dst);
            }
        }
 
   
 
    }
 
    if (table.get(targetSum) == null)
        return null;
    else
        return table.get(targetSum);
}
}
